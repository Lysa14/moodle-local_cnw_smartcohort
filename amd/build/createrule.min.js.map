{"version":3,"file":"createrule.min.js","sources":["../src/createrule.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO\n *\n * @module      TODO\n * @copyright   TODO\n * @license     TODO\n */\n\nimport ModalForm from 'core_form/modalform';\nimport {get_string as getString} from 'core/str';\n\nconst SELECTORS = {\n    actions: {\n        ruleCreate: '[data-action=\"rule-create\"]'\n    }\n};\n\nexport const init = () => {\n    document.addEventListener('click', event => {\n        const ruleCreate = event.target.closest(SELECTORS.actions.ruleCreate);\n        if (ruleCreate) {\n            event.preventDefault();\n            const ruleModal = createRuleModal(event.target, getString('addrule', 'local_cnw_smartcohort'));\n            ruleModal.addEventListener(ruleModal.events.FORM_SUBMITTED, event => {\n                window.location.href = event.detail;\n            });\n            ruleModal.show();\n        }\n\n    });\n};\n\n/**\n * Return modal instance\n *\n * @param {EventTarget} triggerElement\n * @param {Promise} modalTitle\n * @param {String} formClass\n * @param {Object} formArgs\n * @return {ModalForm}\n */\nconst createModalForm = (triggerElement, modalTitle, formClass, formArgs) => {\n    return new ModalForm({\n        modalConfig: {\n            title: modalTitle,\n        },\n        formClass: formClass,\n        args: formArgs,\n        saveButtonText: getString('save', 'moodle'),\n        returnFocus: triggerElement,\n    });\n};\n\n/**\n * Return report modal instance\n *\n * @param {EventTarget} triggerElement\n * @param {Promise} modalTitle\n * @param {Number} reportId\n * @return {ModalForm}\n */\nexport const createRuleModal = (triggerElement, modalTitle, reportId = 0) => {\n    return createModalForm(triggerElement, modalTitle, 'local_cnw_smartcohort\\\\form\\\\add_rule_form', {\n        id: reportId,\n    });\n};\n"],"names":["SELECTORS","ruleCreate","document","addEventListener","event","target","closest","preventDefault","ruleModal","createRuleModal","events","FORM_SUBMITTED","window","location","href","detail","show","createModalForm","triggerElement","modalTitle","formClass","formArgs","ModalForm","modalConfig","title","args","saveButtonText","returnFocus","reportId","id"],"mappings":";;;;;;;+KA0BMA,kBACO,CACLC,WAAY,6CAIA,KAChBC,SAASC,iBAAiB,SAASC,WACZA,MAAMC,OAAOC,QAAQN,kBAAkBC,YAC1C,CACZG,MAAMG,uBACAC,UAAYC,gBAAgBL,MAAMC,QAAQ,mBAAU,UAAW,0BACrEG,UAAUL,iBAAiBK,UAAUE,OAAOC,gBAAgBP,QACxDQ,OAAOC,SAASC,KAAOV,MAAMW,UAEjCP,UAAUQ,kBAehBC,gBAAkB,CAACC,eAAgBC,WAAYC,UAAWC,WACrD,IAAIC,mBAAU,CACjBC,YAAa,CACTC,MAAOL,YAEXC,UAAWA,UACXK,KAAMJ,SACNK,gBAAgB,mBAAU,OAAQ,UAClCC,YAAaT,iBAYRT,gBAAkB,SAACS,eAAgBC,gBAAYS,gEAAW,SAC5DX,gBAAgBC,eAAgBC,WAAY,6CAA8C,CAC7FU,GAAID"}