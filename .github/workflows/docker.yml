name: Package and publish

on:
  push:
    branches:
      - master
 #   tags:
 #     - "v*.*.*"

env:
  REGISTRY: ghcr.io
  USERNAME: lysa14
  IMAGE_NAME: smart-cohort
  IMAGE_TAG: v0.1.0



jobs:
  build-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:

      - name: set lower case repository name
        run: |
          IMAGE_NAME_LC=$(echo "${IMAGE_NAME}" | tr '[:upper:]' '[:lower:]')
          echo "IMAGE_NAME_LC=${IMAGE_NAME_LC}" >>${GITHUB_ENV}
      

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2 

      - name: Log into registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract previous Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}


  # Sign the image with cosign

     
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.5.0
        with:
            cosign-release: 'v2.2.4'
      - name: Check install!
        run: cosign version

      - name: Write signing    
        run: 'echo "$KEY" > cosign.key'
        shell: bash
        env:
          KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
      
      - name: Sign the published Docker image
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: |
          cosign sign --key ${{ secrets.COSIGN_PRIVATE_KEY }} ${{ env.REGISTRY }}/${{ env.USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          rm cosign.key

  # # Push the signature to the registry
  
  #     - name: Push signature to registry
  #       run: |
  #         cosign push --key ${{ env.COSIGN_PRIVATE_KEY }} ${{ env.REGISTRY }}/${{ env.USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
  #       env:
  #         COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
  #         COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}